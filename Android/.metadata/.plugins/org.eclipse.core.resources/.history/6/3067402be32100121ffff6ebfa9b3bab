package com.motlee.android.fragment;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.List;

import com.motlee.android.BaseDetailActivity;
import com.motlee.android.R;
import com.motlee.android.adapter.EventListAdapter;
import com.motlee.android.layouts.GridListTableLayout;
import com.motlee.android.layouts.StretchedBackgroundTableLayout;
import com.motlee.android.object.EventDetail;
import com.motlee.android.object.EventItem;
import com.motlee.android.object.EventItemWithBody;
import com.motlee.android.object.EventListParams;
import com.motlee.android.object.GlobalVariables;
import com.motlee.android.view.HorizontalAspectImageButton;

import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.animation.Animation;
import android.view.animation.TranslateAnimation;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TableRow;
import android.widget.TextView;
import android.widget.TableLayout.LayoutParams;

public class EventDetailFragment extends BaseMotleeFragment {
	private String tag = "EventDetailFragment";
	
	private EventDetail mEventDetail;
	
	private String pageTitle = "All Events";
	
	private GridListTableLayout girdListTableLayout;
	private StretchedBackgroundTableLayout eventInfoLayout;
	
	private Boolean onCreateViewHasBeenCalled = false;
	
	private View view;
	
	private LayoutInflater inflater;
	
	/*@Override
	public void onListItemClick(ListView l, View v, int position, long id) {
	    String[] links = getResources().getStringArray(R.array.tut_links);
	    String content = links[position];
	    Intent showContent = new Intent(getActivity().getApplicationContext(),
	            TutViewerActivity.class);
	    showContent.setData(Uri.parse(content));
	    startActivity(showContent);
	}*/
	@Override
	public void onCreate(Bundle savedInstanceState) {
	    super.onCreate(savedInstanceState);
	    Log.w(tag, "onCreate");
	}
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, 
	        Bundle savedInstanceState)
	{
		
		Log.w(tag, "onCreateView");
		
		this.inflater = inflater;
		view = (View) this.inflater.inflate(R.layout.activity_event_detail, null);
		
		girdListTableLayout = (GridListTableLayout) view.findViewById(R.id.event_detail_grid_list);
		eventInfoLayout = (StretchedBackgroundTableLayout) view.findViewById(R.id.event_detail_info);
		
		eventInfoLayout.setBackgroundDrawable(getResources().getDrawable( R.drawable.label_button_background));
		
		if (mEventDetail != null)
		{
			addListToTableLayout();
		}
		
		if (mEventDetail != null)
		{
			setNavigationButtons();
		}
		
		setPageHeader(pageTitle);
		if (mEventDetail.getOwnerID() == GlobalVariables.getInstance().getUserId())
		{
			showRightHeaderButton(BaseDetailActivity.EDIT);
		}
		else if (mEventDetail.getAttendees().contains(GlobalVariables.getInstance().getUserId()))
		{
			showRightHeaderButton(BaseDetailActivity.LEAVE);
		}
		else
		{
			showRightHeaderButton(BaseDetailActivity.JOIN);
		}
		showLeftHeaderButton();
		
		initializeOnPageButtons(view);
		
		onCreateViewHasBeenCalled = true;
		
		return view;
	}

	
	
	public void initializeOnPageButtons(View view)
	{
		TextView tv = (TextView) view.findViewById(R.id.label_split_button_left_text);
		tv.setTypeface(GlobalVariables.getInstance().getGothamLightFont());
		tv.setText("Add Item");
		
		tv = (TextView) view.findViewById(R.id.label_split_button_right_text);
		tv.setTypeface(GlobalVariables.getInstance().getGothamLightFont());
		tv.setText("Add Friends");
	}
	
	
	
	public void addEventDetail(EventDetail eDetail) {
		Log.w(tag, "addEventDetail");
		mEventDetail = eDetail;
		this.pageTitle = mEventDetail.getEventName();
		setPageHeader(pageTitle);
		if (girdListTableLayout != null)
		{
			addListToTableLayout();
		}
		
		if (view != null)
		{
			setNavigationButtons();
		}
	}
	
	private void setNavigationButtons()
	{
		eventInfoLayout.removeAllViews();
		
		setLabelButton(mEventDetail.getDateString(), getResources().getDrawable(R.drawable.icon_time_normal), GlobalVariables.DATE);
		setLabelButton(mEventDetail.getLocationInfo().locationDescription, getResources().getDrawable(R.drawable.icon_map_background_normal), GlobalVariables.LOCATION);
		setLabelButton(mEventDetail.getAttendeeCount() + " People", getResources().getDrawable(R.drawable.icon_friend_normal), GlobalVariables.ATTENDEES);
		setLabelButton(mEventDetail.getFomoCount()+ " FOMOs", getResources().getDrawable(R.drawable.icon_fomo_normal), GlobalVariables.FOMOS);
		setPictureLabel(mEventDetail.getImages().size() + " Pictures");
	}

	private void setLabelButton(String labelText, Drawable image, String description) {
		
		View labelButton = this.inflater.inflate(R.layout.event_detail_info_button, null);
		
		View imageButton = labelButton.findViewById(R.id.label_button);
		imageButton.setContentDescription(description);
		
		ImageView imageView = (ImageView) labelButton.findViewById(R.id.label_button_icon);
		imageView.setImageDrawable(image);
		
		TextView textView = (TextView) labelButton.findViewById(R.id.label_button_text);
		textView.setTypeface(GlobalVariables.getInstance().getHelveticaNeueBoldFont());
		textView.setText(labelText);
		
		TableRow tr = new TableRow(getActivity());
		LayoutParams lp = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
		tr.setLayoutParams(lp);
		tr.addView(labelButton);
		eventInfoLayout.addView(tr);
	}
	
	private void setPictureLabel(String labelText)
	{
		View labelButton = this.inflater.inflate(R.layout.event_detail_info_button_pictures, null);
		
		TextView textView = (TextView) labelButton.findViewById(R.id.label_button_text_pictures);
		textView.setTypeface(GlobalVariables.getInstance().getHelveticaNeueBoldFont());
		textView.setText(labelText);
		
		disableImageButton((ImageButton) labelButton.findViewById(R.id.label_button_list_view));
		
		TableRow tr = new TableRow(getActivity());
		LayoutParams lp = new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
		tr.setLayoutParams(lp);
		tr.addView(labelButton);
		eventInfoLayout.addView(tr);
	}
	
	private void disableImageButton(ImageButton imageButton)
	{
		if (imageButton != null)
		{
			imageButton.setClickable(false);
			imageButton.setEnabled(false);
		}
	}
	
	private void enableImageButton(ImageButton imageButton)
	{
		if (imageButton != null)
		{
			imageButton.setClickable(true);
			imageButton.setEnabled(true);
		}
	}
	
	public void switchToListView(View view)
	{
		addListToTableLayout();
	}
	
	public void switchToGridView(View view)
	{
		addGridToTableLayout();
	}
	
	public void addListToTableLayout()
	{
		List<EventItemWithBody> storyPhotoList = new ArrayList<EventItemWithBody>();
		storyPhotoList.addAll(mEventDetail.getStories());
		storyPhotoList.addAll(mEventDetail.getImages());
		Collections.sort(storyPhotoList);
		
		girdListTableLayout.addList(storyPhotoList);
		enableImageButton((ImageButton) eventInfoLayout.findViewById(R.id.label_button_grid_view));
		disableImageButton((ImageButton) eventInfoLayout.findViewById(R.id.label_button_list_view));
	}
	
	public void addGridToTableLayout()
	{
		girdListTableLayout.addGrid(mEventDetail.getImages());
		enableImageButton((ImageButton) eventInfoLayout.findViewById(R.id.label_button_list_view));
		disableImageButton((ImageButton) eventInfoLayout.findViewById(R.id.label_button_grid_view));
	}
}
