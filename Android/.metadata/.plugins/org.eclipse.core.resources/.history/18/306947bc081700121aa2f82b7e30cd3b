package com.motlee.android;

import java.lang.reflect.Array;
import java.util.ArrayList;

import shared.ui.actionscontentview.ActionsContentView;

import com.facebook.android.DialogError;
import com.facebook.android.Facebook;
import com.facebook.android.FacebookError;
import com.facebook.android.Util;
import com.facebook.android.Facebook.DialogListener;
import com.motlee.android.adapter.EventListAdapter;
import com.motlee.android.fragment.EventListFragment;
import com.motlee.android.fragment.MainMenuFragment;
import com.motlee.android.fragment.responder.EventDetailResponderFragment;
import com.motlee.android.object.EventDetail;
import com.motlee.android.object.EventListParams;
import com.motlee.android.object.MenuFunctions;

import android.os.Bundle;
import android.app.Activity;
import android.app.ListActivity;
import android.content.Intent;
import android.graphics.Rect;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.app.ListFragment;
import android.view.Menu;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnTouchListener;
import android.widget.ArrayAdapter;
import android.widget.LinearLayout;
import android.widget.ListView;

public class EventListActivity extends FragmentActivity {

	// Fragment Tag Strings
	private static String LOGIN_PAGE = "LoginPageFragment";
	private static String MAIN_MENU = "MainMenuFragment";
	private static String EVENT_LIST = "EventListFragment";
	private static String EVENT_RESPONDER = "EventResponderFragment";
	
	private EventListAdapter eAdapter;
	private EventListParams eventListParams = new EventListParams("All Events");

	private Boolean mainMenuOpen = false;
	
	private Facebook facebook = new Facebook("283790891721595");
	
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        
        FragmentManager     fm = getSupportFragmentManager();
        FragmentTransaction ft = fm.beginTransaction();
        
        //Fragment fragment = fm.findFragmentById(R.id.fragment_content);
        
        EventListFragment eventListFragment = new EventListFragment();
        
        eAdapter = new EventListAdapter(this, R.layout.event_list_item, new ArrayList<Integer>());
        
        eventListFragment.addEventListAdapter(eAdapter);
       
        eventListParams.headerText = "All Events";
        
        eventListFragment.setEventListParams(eventListParams);
        
        ft.add(R.id.fragment_content, eventListFragment);
        
        //fragment = fm.findFragmentById(R.id.main_menu);
        
        //MainMenuFragment mainMenuFragment = (MainMenuFragment) fragment;
        
        //ft.hide(mainMenuFragment);
        
        EventDetailResponderFragment responder = (EventDetailResponderFragment) fm.findFragmentByTag(EVENT_RESPONDER);
        if (responder == null) {
            responder = new EventDetailResponderFragment();
            
            // We add the fragment using a Tag since it has no views. It will make the Twitter REST call
            // for us each time this Activity is created.
            ft.add(responder, EVENT_RESPONDER);
        }
        
        ft.commit();
    }
    
    public EventListAdapter getEventListAdapter()
    {
    	return eAdapter;
    }
    
    
    //onClickMainMenu: When user clicks on main menu button
    
    public void onClickOpenMainMenu(View view)
    {
    	MenuFunctions.onClickOpenMainMenu(view, this);
        
    	mainMenuOpen = true;
    	
        /*contentPage.setOnTouchListener(new OnTouchListener() {
			
        	public boolean onTouch(View v, MotionEvent event) {
				if (event.getAction() == MotionEvent.ACTION_DOWN)
				{
					FragmentActivity activity = (FragmentActivity) v.getContext();
					
					
					
			        FragmentManager     fm = activity.getSupportFragmentManager();
			        FragmentTransaction ft = fm.beginTransaction();
			        
			        MainMenuFragment mainMenuFragment = (MainMenuFragment) fm.findFragmentById(R.id.main_menu);
			    	
			        
			        if (mainMenuFragment == null)
			        {
			        	mainMenuFragment = new MainMenuFragment();
			        }
			        
			        ft.hide(mainMenuFragment);
			        
			        hideMenu();
			        
			        ft.commit();
				}
				return false;
			}
        });*/
    }
    
    public void onClickGetEventDetail(View view)
    {
    	Integer eventID = Integer.parseInt(view.getContentDescription().toString());
    	
    	Intent eventDetail = new Intent(EventListActivity.this, EventDetailActivity.class);
    	
    	eventDetail.putExtra("EventID", eventID);
    	
    	startActivity(eventDetail);
    }
    
	public void onClickShowAllEvents(View view)
	{
		EventListParams newParams = new EventListParams("All Events");
		
		showNewListView(newParams);
		
		hideMenu();
		
		showMenuButton();
	}
	
	public void onClickShowMyEvents(View view)
	{
		EventListParams newParams = new EventListParams("My Events");
		
		showNewListView(newParams);
		
		hideMenu();
		
		showMenuButton();
	}
	
	public void onClickShowNearbyEvents(View view)
	{
		EventListParams newParams = new EventListParams("Nearby Events");
		
		showNewListView(newParams);
		
		hideMenu();
		
		showMenuButton();
	}
	
	@Override
	public boolean dispatchTouchEvent(MotionEvent ev) {
		if (mainMenuOpen)
		{
		    Rect menuBounds = new Rect();
		    View view = findViewById(R.id.main_menu);
		    
		    view.getDrawingRect(menuBounds);
	
		    if (!menuBounds.contains((int) ev.getX(), (int) ev.getY()) && ev.getAction() == MotionEvent.ACTION_DOWN) {
		        // Tapped outside so we finish the activity
		    	FragmentManager fm = getSupportFragmentManager();
		        FragmentTransaction ft = fm.beginTransaction();
		        
		        Fragment fragment = fm.findFragmentById(R.id.main_menu);
		        
		        if (fragment != null)
		        {
		        	ft.setCustomAnimations(R.anim.slide_in_left, R.anim.slide_out_left, R.anim.slide_in_left, R.anim.slide_out_left)
		        	.hide(fragment)
		        	.commit();
			        
			        mainMenuOpen = false;
			        
			        View menuButton = findViewById(R.id.menu_button);
			        menuButton.setEnabled(true);
		        }
		        
		        return true;
		    }
		    else
		    {
		    	return super.dispatchTouchEvent(ev);
		    }
		}
		else
		{
			return super.dispatchTouchEvent(ev);
		}
	}
	
	private void hideMenu()
	{
        View menuView = findViewById(R.id.main_menu);
        
        menuView.setVisibility(View.GONE);
	}
	
	private void showMenuButton()
	{
		View menuButton = findViewById(R.id.menu_button);
		
		menuButton.setVisibility(View.VISIBLE);
	}
	
	private void showNewListView(EventListParams params)
	{
		FragmentManager fm = this.getSupportFragmentManager();	
		
		EventListFragment eventListFragment = new EventListFragment();
		
		eventListFragment.addEventListAdapter(eAdapter);
		
		eventListFragment.setEventListParams(params);
		
		MainMenuFragment mainMenuFragment = (MainMenuFragment) fm.findFragmentById(R.id.main_menu);
		
		FragmentTransaction ft = fm.beginTransaction();
		
		ft.replace(R.id.fragment_content, eventListFragment);
		
		ft.hide(mainMenuFragment);
		
		ft.commit();
	}
}














