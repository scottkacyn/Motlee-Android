package com.motlee.android.layouts;

import com.motlee.android.object.GlobalVariables;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Matrix;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.graphics.drawable.NinePatchDrawable;
import android.util.AttributeSet;
import android.util.Log;
import android.view.Display;
import android.view.View;
import android.widget.TableLayout;

public class StretchedBackgroundTableLayout extends TableLayout {

	private static Integer layoutHeight;
	
	private static String androidNamespace = "http://schemas.android.com/apk/res/android";
	
	private static int leftPadding;
	private static int rightPadding;
	private static int topPadding;
	private static int bottomPadding;
	
	public StretchedBackgroundTableLayout(Context context) {
		super(context);
		
		bottomPadding = this.getPaddingBottom();
		topPadding = this.getPaddingTop();
		leftPadding = this.getPaddingLeft();
		rightPadding = this.getPaddingRight();
	}

	public StretchedBackgroundTableLayout(Context context, AttributeSet attrs) {
		super(context, attrs);	
		
		bottomPadding = this.getPaddingBottom();
		topPadding = this.getPaddingTop();
		leftPadding = this.getPaddingLeft();
		rightPadding = this.getPaddingRight();
	}
	
	private Drawable resizeBackgroundDrawable(Drawable drawable)
	{
		Display display = GlobalVariables.getInstance().getDisplay();
		
		drawable.setBounds(0, 0, display.getWidth(), 0);
		
		return drawable;
	}
	
	@Override
	public void setBackgroundDrawable(Drawable drawable)
	{
		super.setBackgroundDrawable(resizeBackgroundDrawable(drawable));
		this.setPadding(leftPadding, topPadding, rightPadding, bottomPadding);
		Log.d("StretchedBackgroundTableLayout", "left: " + leftPadding + ", top: " + topPadding + ", right: " + rightPadding + ", left: " + leftPadding);
	}
	
	@Override
	public void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
	{
		super.onMeasure(widthMeasureSpec, heightMeasureSpec);
		
		int width = MeasureSpec.getSize(widthMeasureSpec);
		int height = MeasureSpec.getSize(heightMeasureSpec);
		
		Log.d("StretchedBackgroundTableLayout", "Width: " + width + ", Height: " + height);
	}
	
	@Override
	public void onLayout(boolean changed, int left, int top, int right, int bottom)
	{
		super.onLayout(changed, left, top, right, bottom);
		Drawable background = this.getBackground();
		
		if (background != null)
		{
			int imageWidth = right - left;
			int imageHeight = bottom - top;
			
			Log.d("StretchedBackgroundTableLayout", "Changed: " + changed + ", Width: " + imageWidth + ", Height: " + imageHeight + ", left: " + left + ", right: " + right + ", top: " + top + ", bottom: " + bottom);
			
			if (background instanceof NinePatchDrawable)
			{
				NinePatchDrawable nineDrawable = (NinePatchDrawable) background;
				
				nineDrawable.setBounds(left, top, right, bottom);
				
				this.setBackgroundDrawable(nineDrawable);
			}
			else
			{
				Bitmap bitmap = ((BitmapDrawable) background).getBitmap();
				
				Drawable d = new BitmapDrawable(getResources(), Bitmap.createScaledBitmap(bitmap, imageWidth, imageHeight, false));
				
				this.setBackgroundDrawable(d);
			}
		}
	}

}
